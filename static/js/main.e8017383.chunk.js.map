{"version":3,"sources":["a1-root/App.module.css","a1-root/v1-Main/common/c1-SuperInputText/SuperInputText.module.css","a1-root/v1-Main/Main.module.css","a1-root/v1-Main/common/c2-SuperButton/SuperButton.module.css","a1-root/v1-Main/common/c3-SuperCheckbox/SuperCheckbox.module.css","a1-root/v2-Login/Login.module.css","a1-root/v3-Registration/Registration.module.css","a1-root/v4-Profile/Profile.module.css","a1-root/v5-Page_404/Page_404.module.css","a1-root/v6-Rebild_password/Rebild_passwoed.module.css","a1-root/v7-New_password/New_password.module.css","a1-root/v1-Main/common/c1-SuperInputText/SuperInputText.tsx","a1-root/v1-Main/common/c2-SuperButton/SuperButton.tsx","a1-root/v1-Main/common/c3-SuperCheckbox/SuperCheckbox.tsx","a1-root/v1-Main/Main.tsx","a1-root/v2-Login/Login.tsx","a1-root/v3-Registration/Registration.tsx","a1-root/v4-Profile/Profile.tsx","a1-root/v5-Page_404/Page_404.tsx","a1-root/v6-Rebild_password/Rebild_password.tsx","a1-root/v7-New_password/New_password.tsx","a1-root/App.tsx","reportWebVitals.ts","a1-root/store.ts","a1-root/v1-Main/mainReduser.ts","a1-root/v2-Login/loginReduser.ts","a1-root/v3-Registration/registrationReduser.ts","a1-root/v4-Profile/profileReduser.ts","a1-root/v5-Page_404/pag404Reduser.ts","a1-root/v6-Rebild_password/rebildPasswordReduser.ts","a1-root/v7-New_password/newPasswordReduser.ts","index.tsx"],"names":["module","exports","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperButton","red","finalClassName","mainStyle","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","Main","useState","text","setText","showAlert","alert","setChecked","column","testSpanError","blue","onClick","disabled","Login","style","App","Registration","Profile","Page_404","Rebild_password","New_password","to","PATH","PET_MAIN","activeClassName","activeLink","PET_LOGIN","PET_REISTRATION","PET_PROFILE","PET_PAGE404","PET_REBILD_PASSWORD","PET_NEW_PASSWORD","path","PET_NULL","exact","render","from","PET","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","main","state","login","registration","profile","page404","rebildPassword","newPassword","store","createStore","applyMiddleware","thunk","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e8017383.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__ijKqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3YmIu\",\"errorInput\":\"SuperInputText_errorInput__lsgp-\",\"error\":\"SuperInputText_error__31OFg\",\"input\":\"SuperInputText_input__nLJQL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Main_blue__2NOtk\",\"column\":\"Main_column__2MgKG\",\"testSpanError\":\"Main_testSpanError__2KSaT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__19tbH\",\"mainStyle\":\"SuperButton_mainStyle__BUMOp\",\"move\":\"SuperButton_move__2jiLY\",\"red\":\"SuperButton_red__1MVnI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1ChrY\",\"spanClassName\":\"SuperCheckbox_spanClassName__3TNZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Login_App__zXK5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Registration_App__kDjY3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Profile_App__3C4_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Page_404_App__jiY90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Rebild_passwoed_App__1Krjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"New_password_App__2Iau0\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${!error ? s.superInput : s.errorInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${s.mainStyle} ${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked &&  onChangeChecked(e.currentTarget.checked)\r\n        onChange &&  onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './Main.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction Main() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n           <h1>Main</h1>\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением не обязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {'этот текст попадёт в children'}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport style from './Login.module.css'\n\nfunction Login() {\n  return (\n    <div className={style.App}>\n      <h1>Login</h1>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react';\nimport style from './Registration.module.css'\n\nfunction Registration() {\n  return (\n    <div className={style.App}>\n      <h1>Registration</h1>\n    </div>\n  );\n}\n\nexport default Registration;\n","import React from 'react';\nimport style from './Profile.module.css'\n\nfunction Profile() {\n  return (\n    <div className={style.App}>\n      <h1>Profile</h1>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from 'react';\nimport style from './Page_404.module.css'\n\nfunction Page_404() {\n  return (\n    <div className={style.App}>\n      <h1>Page 404</h1>\n    </div>\n  );\n}\n\nexport default Page_404;\n","import React from 'react';\nimport style from './Rebild_passwoed.module.css'\n\nfunction Rebild_password() {\n  return (\n    <div className={style.App}>\n      <h1>Rebild password</h1>\n    </div>\n  );\n}\n\nexport default Rebild_password;\n","import React from 'react';\nimport style from './New_password.module.css'\n\nfunction New_password() {\n  return (\n    <div className={style.App}>\n      <h1>New password</h1>\n    </div>\n  );\n}\n\nexport default New_password;\n","import React from 'react';\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\nimport style from './App.module.css'\nimport Main from \"./v1-Main/Main\";\nimport Login from \"./v2-Login/Login\";\nimport Registration from \"./v3-Registration/Registration\";\nimport Profile from \"./v4-Profile/Profile\";\nimport Page_404 from \"./v5-Page_404/Page_404\";\nimport Rebild_password from \"./v6-Rebild_password/Rebild_password\";\nimport New_password from \"./v7-New_password/New_password\";\n\n\nfunction App() {\n    return (\n        <>\n            <div className={style.App}>\n                <NavLink to={PATH.PET_MAIN} activeClassName={style.activeLink}>Main</NavLink>\n                <NavLink to={PATH.PET_LOGIN} activeClassName={style.activeLink}>Login</NavLink>\n                <NavLink to={PATH.PET_REISTRATION} activeClassName={style.activeLink}>Registration</NavLink>\n                <NavLink to={PATH.PET_PROFILE} activeClassName={style.activeLink}>Profile</NavLink>\n                <NavLink to={PATH.PET_PAGE404} activeClassName={style.activeLink}>Page_404</NavLink>\n                <NavLink to={PATH.PET_REBILD_PASSWORD} activeClassName={style.activeLink}>Rebild_password</NavLink>\n                <NavLink to={PATH.PET_NEW_PASSWORD} activeClassName={style.activeLink}>New_password</NavLink>\n\n            </div>\n            <Switch>\n                <Route path={PATH.PET_NULL} exact render={() => <Redirect to={PATH.PET_MAIN}/>}/>\n\n                <Route exact path={PATH.PET_MAIN} render={()=><Main/> }/>\n                <Route exact path={PATH.PET_LOGIN} render={()=><Login/> }/>\n                <Route exact path={PATH.PET_REISTRATION} render={()=><Registration/> }/>\n                <Route exact path={PATH.PET_PROFILE} render={()=><Profile/> }/>\n                <Route exact path={PATH.PET_PAGE404} render={()=><Page_404/> }/>\n                <Route exact path={PATH.PET_REBILD_PASSWORD} render={()=><Rebild_password/> }/>\n                <Route exact path={PATH.PET_NEW_PASSWORD} render={()=><New_password/> }/>\n\n                <Redirect from={'*'} to={PATH.PET_PAGE404}/>\n            </Switch>\n        </>\n    )\n}\n\nexport default App\n\nexport const PATH = {\n    PET: '/',\n    PET_MAIN: '/My-pet-progect/main',\n    PET_LOGIN: '/My-pet-progect/login',\n    PET_REISTRATION: '/My-pet-progect/registration',\n    PET_PROFILE: '/My-pet-progect/profile',\n    PET_PAGE404: '/My-pet-progect/page404',\n    PET_REBILD_PASSWORD: '/My-pet-progect/rebild-password',\n    PET_NEW_PASSWORD: '/My-pet-progect/new-password',\n    PET_NULL: '/'\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport {mainReduser} from \"./v1-Main/mainReduser\";\r\nimport {loginReduser} from \"./v2-Login/loginReduser\";\r\nimport {profileReduser} from \"./v4-Profile/profileReduser\";\r\nimport {page404Reduser} from \"./v5-Page_404/pag404Reduser\";\r\nimport {newPasswordReduser} from \"./v7-New_password/newPasswordReduser\";\r\nimport {rebildPasswordReduser} from \"./v6-Rebild_password/rebildPasswordReduser\";\r\nimport {registrationReduser} from \"./v3-Registration/registrationReduser\";\r\n\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    main: mainReduser,\r\n    login: loginReduser,\r\n    registration: registrationReduser,\r\n    profile: profileReduser,\r\n    page404: page404Reduser,\r\n    rebildPassword: rebildPasswordReduser,\r\n    newPassword: newPasswordReduser\r\n})\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// а это, чтобы можно было в консоли браузера обращаться к store в любой момент\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n","\r\nexport const mainReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const loginReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const registrationReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const profileReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const page404Reduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const rebildPasswordReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","\r\nexport const newPasswordReduser = (state= {}, action: any)=> {\r\n    return state\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './a1-root/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./a1-root/store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}